generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?  @db.Text
  access_token      String?  @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?  @db.Text
  session_state     String?
  createdAt         DateTime @default(now()) @map(name: "created_at")
  updatedAt         DateTime @default(now()) @map(name: "updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map(name: "accounts")
}

model User {
  id            String    @id
  name          String
  email         String    @unique
  image         String?
  emailVerified DateTime?
  accounts      Account[]
  upvotes       Int       @default(0)
  posts         Int       @default(0)
  words         Word[]
  Comment       Comment[]

  @@map(name: "users")
}

model Word {
  id            String    @id @default(cuid())
  userId        String
  User          User?     @relation(fields: [userId], references: [id])
  word          String?
  description   String?
  upvotes       Int?      @default(0)
  downvotes     Int?      @default(0)
  commentscount Int?      @default(0)
  comments      Comment[]
}

model Comment {
  id        String @id @default(cuid())
  comment   String
  upvotes   Int @default(0)
  downvotes Int @default(0)

  Word   Word?  @relation(fields: [wordId], references: [id])
  wordId String

  User   User?  @relation(fields: [userId], references: [id])
  userId String
}
